/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ijae4.xleeji00;

import java.awt.Color;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author leehu
 */
public class TestLogin extends javax.swing.JFrame {

    /**
     * Creates new form testLogin
     */
    public TestLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frame = new javax.swing.JFrame();
        signupLabel = new javax.swing.JLabel();
        loginLabel = new javax.swing.JLabel();
        signupUsernameLabel = new javax.swing.JLabel();
        NewUserField = new javax.swing.JTextField();
        signupPasswordLabel = new javax.swing.JLabel();
        PasswordStrengthField = new javax.swing.JPanel();
        passwordStrengthLabel = new javax.swing.JLabel();
        passwordAginLabel = new javax.swing.JLabel();
        RegisterButton = new javax.swing.JButton();
        loginUsernameLabel = new javax.swing.JLabel();
        UsernameField = new javax.swing.JTextField();
        loginPasswordLabel = new javax.swing.JLabel();
        LogInField = new javax.swing.JButton();
        PasswordField = new javax.swing.JPasswordField();
        NewPasswordField = new javax.swing.JPasswordField();
        PasswordAgainField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout frameLayout = new javax.swing.GroupLayout(frame.getContentPane());
        frame.getContentPane().setLayout(frameLayout);
        frameLayout.setHorizontalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        frameLayout.setVerticalGroup(
            frameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signupLabel.setFont(new java.awt.Font("굴림", 1, 48)); // NOI18N
        signupLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        signupLabel.setText("Sign Up");

        loginLabel.setFont(new java.awt.Font("굴림", 1, 48)); // NOI18N
        loginLabel.setText("Log In");

        signupUsernameLabel.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        signupUsernameLabel.setText("Username");

        NewUserField.setNextFocusableComponent(NewPasswordField);

        signupPasswordLabel.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        signupPasswordLabel.setText("Password");

        passwordStrengthLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PasswordStrengthFieldLayout = new javax.swing.GroupLayout(PasswordStrengthField);
        PasswordStrengthField.setLayout(PasswordStrengthFieldLayout);
        PasswordStrengthFieldLayout.setHorizontalGroup(
            PasswordStrengthFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passwordStrengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PasswordStrengthFieldLayout.setVerticalGroup(
            PasswordStrengthFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passwordStrengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        passwordAginLabel.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        passwordAginLabel.setText("Password again");

        RegisterButton.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        RegisterButton.setText("Register");
        RegisterButton.setEnabled(false);
        RegisterButton.setNextFocusableComponent(NewUserField);
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        loginUsernameLabel.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        loginUsernameLabel.setText("Username");

        UsernameField.setNextFocusableComponent(PasswordField);

        loginPasswordLabel.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        loginPasswordLabel.setText("Password");

        LogInField.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        LogInField.setText("Log In");
        LogInField.setNextFocusableComponent(UsernameField);
        LogInField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogInFieldActionPerformed(evt);
            }
        });

        PasswordField.setEchoChar('\u2022');

        NewPasswordField.setEchoChar('\u2022');
        NewPasswordField.setNextFocusableComponent(PasswordAgainField);
        NewPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NewPasswordFieldKeyPressed(evt);
            }
        });

        PasswordAgainField.setEchoChar('\u2022');

        jLabel1.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("?");
        jLabel1.setToolTipText("<html>\n<div style = \"color : red\">You must have<br>\nPassword length > 4 <br></div>\n<br>\n<div style = \"color : green\">Option<br>\nCapital letter<br>\nSpecial symbol</div>\n</html>\n\n\n\n");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RegisterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PasswordAgainField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PasswordStrengthField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(signupLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(signupUsernameLabel)
                            .addComponent(passwordAginLabel)
                            .addComponent(signupPasswordLabel)
                            .addComponent(NewPasswordField)
                            .addComponent(NewUserField))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PasswordField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LogInField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loginPasswordLabel)
                            .addComponent(UsernameField)
                            .addComponent(loginLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(loginUsernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signupLabel)
                    .addComponent(loginLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signupUsernameLabel)
                    .addComponent(loginUsernameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UsernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(NewUserField))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signupPasswordLabel)
                    .addComponent(loginPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(NewPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(PasswordField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PasswordStrengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(passwordAginLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(LogInField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordAgainField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    List<userCollection> list = new ArrayList<>();
    
    /**
     * Log In(right part of the window)
     * Username Field - the name of an existing user to be logged in.
     * Password Field - takes the password of an existing user.
     * Log In Button - tries to log in the user specified in the input fields.
     * @param evt 
     */
    private void LogInFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogInFieldActionPerformed
        // TODO add your handling code here:
        String username = UsernameField.getText();
        String password = PasswordField.getText();
        for(userCollection x : list){
            if(x.username.equals(username) && x.password.equals(password)){
                JOptionPane.showMessageDialog(frame, "Login successful!");
                UsernameField.setText("");
                PasswordField.setText("");
            }
            else{
            JOptionPane.showMessageDialog(frame, "Login failed!");
            }
        }

    }//GEN-LAST:event_LogInFieldActionPerformed

    /**
     * Sign Up
     * New Username Field - input field, the name of the newly registered user.
     * New Password Field - input field, the password of the newly registered user.
     * Password Again Field - input field, the password repeated agian, serves to ensure that the pass-
     * word is written correctly.
     * Register Button - registers a new user upon clicking.
     * @param evt 
     */
    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        // TODO add your handling code here:
        if(NewUserField.getText().equals("")){
            JOptionPane.showMessageDialog(frame, "Input name!");
            return;
        }
        
        if(NewPasswordField.getText().equals("")){
            JOptionPane.showMessageDialog(frame, "Input password!");
            return;
        }
        
        if(!(NewPasswordField.getText().equals(PasswordAgainField.getText()))){
            JOptionPane.showMessageDialog(frame, "Password is not same!");
            return;
        }
        
        userCollection user = new userCollection(NewUserField.getText(), NewPasswordField.getText());
        for(userCollection x : list){
            if(x.username.equals(user.username)){
                JOptionPane.showMessageDialog(frame, "Username is existing!");
                return;
            }
        }
        list.add(user);
        NewUserField.setText("");
        NewPasswordField.setText("");
        PasswordAgainField.setText("");
        
        Color gray = new Color(214,217,224);
        PasswordStrengthField.setBackground(gray);
        passwordStrengthLabel.setText("");
        
    }//GEN-LAST:event_RegisterButtonActionPerformed

    /**
     * Password Strength Field - read only field, the content and colour of this field change according
     * to the length of the password written by user.
     * @param evt 
     */
    private void NewPasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NewPasswordFieldKeyPressed
        // TODO add your handling code here:
        Strength();
    }//GEN-LAST:event_NewPasswordFieldKeyPressed
    /**
     * Password length <= 4 : display worning, that the password is too weak, the colour of the field is
     * red and the Register button is disabled.
     * Password length <= 6 : displays that the password is of moderate strength, the colour of
     * the field is orange and the Register button is enabled.
     * Password length > 6 : the password is strong, the colour of the field should be green and the 
     * Register button should be enabled.
     */
    private void Strength(){
        String password = NewPasswordField.getText();
        
        Color red = new Color(255,0,0);
        Color orange = new Color(255, 165, 0);
        Color green = new Color(0, 255, 0);
        
        if (password.length() < 4){
            PasswordStrengthField.setBackground(red);
            passwordStrengthLabel.setText("weak password");
            RegisterButton.setEnabled(false);
        }
        else if(password.length() < 6 && password.length() >= 4){
            PasswordStrengthField.setBackground(orange);
            passwordStrengthLabel.setText("moderate strength");
            RegisterButton.setEnabled(true);
        }
        else{
            PasswordStrengthField.setBackground(green);
            passwordStrengthLabel.setText("strong password");
            RegisterButton.setEnabled(true);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestLogin().setVisible(true);
          
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogInField;
    private javax.swing.JPasswordField NewPasswordField;
    private javax.swing.JTextField NewUserField;
    private javax.swing.JPasswordField PasswordAgainField;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JPanel PasswordStrengthField;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JTextField UsernameField;
    private javax.swing.JFrame frame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JLabel loginPasswordLabel;
    private javax.swing.JLabel loginUsernameLabel;
    private javax.swing.JLabel passwordAginLabel;
    private javax.swing.JLabel passwordStrengthLabel;
    private javax.swing.JLabel signupLabel;
    private javax.swing.JLabel signupPasswordLabel;
    private javax.swing.JLabel signupUsernameLabel;
    // End of variables declaration//GEN-END:variables
}
